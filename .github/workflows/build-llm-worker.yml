# ARCHITECTURAL NOTE: CI/CD for Large Images
# This workflow automates the build and push process for the LLM worker. This is essential
# because the image is very large due to the baked-in models. Automating this with GitHub Actions
# ensures a consistent build environment and avoids tying up local developer machines for hours.
#
name: Build and Push LLM Worker Image

#
# ARCHITECTURAL NOTE: Workflow Triggers
# 'push: branches: [ main ]' means this workflow runs automatically every time you merge
# changes into your main branch, ensuring your Docker Hub image is always up-to-date.
# 'workflow_dispatch:' allows you to run this workflow manually from the GitHub Actions tab,
# which is useful for testing or forcing a rebuild.
#
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        # Buildx is a Docker component that enables advanced features like building for
        # multiple architectures and improved caching.
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        # This step securely logs into Docker Hub using the secrets you configured in your
        # GitHub repository. It never exposes your credentials in the logs.
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push LLM Worker
        # ARCHITECTURAL NOTE: Caching
        # The 'cache-from' and 'cache-to' settings are a critical optimization. They enable Docker
        # layer caching. After the first long run, subsequent builds will only rebuild layers that
        # have changed (e.g., if you update worker_api.py). The massive model layers will be
        # pulled from the cache, drastically speeding up the workflow.
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./llm-worker.Dockerfile
          push: true
          tags: |
            scarymonkey/aios-llm-worker:latest
            scarymonkey/aios-llm-worker:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
